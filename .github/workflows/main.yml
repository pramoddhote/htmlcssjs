name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Set image name and registry as environment variables
      - name: Set image name and registry
        run: |
          echo "IMAGE_NAME=myimage" >> $GITHUB_ENV
          echo "REGISTRY=ghcr.io" >> $GITHUB_ENV

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Get short commit SHA and set as environment variable
      - name: Get short SHA
        run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      # Log in to GitHub Container Registry using PAT
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ env.short_sha }}

      # Post build cleanup - Docker image prune
      - name: Post build cleanup
        run: docker image prune -af

      # Clean up old images, keeping only the latest 
      - name: Delete old versions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api /users/${{ github.actor }}/packages/container/htmlcssjs%2F${{ env.IMAGE_NAME }}/versions \
          --jq '[.[]] | .[].id' \
          | tail -n +4 \
          | xargs -I {} gh api /users/${{ github.actor }}/packages/container/htmlcssjs%2F${{ env.IMAGE_NAME }}/versions/{} -X DELETE \
          -H "Authorization: Bearer ${GITHUB_TOKEN}"


